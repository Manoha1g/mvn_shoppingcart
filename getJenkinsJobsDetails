// import hudson.maven.*
import hudson.model.ItemGroup
// import hudson.maven.reporters.*
// import hudson.plugins.emailext.*

pipeline {
    agent { label 'master' }
    stages {
        stage('Checkout Script') {
            steps {
                   checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/Manoha1g/mvn_shoppingcart.git']]])
            }
        }
        stage('test-stage') {
            steps {
               script {
                 def jenkins = Jenkins.getInstance()
                 def all_jobs = jenkins.getAllItems()
//                 def jobs_names = Jenkins.instance.getAllItems()
//                 println "all jobs: ${all_jobs}"
                 for (job in all_jobs) {
//                    echo "${job_data}"
                   def job_data = Jenkins.instance.getItemByFullName(job.fullName)
                   echo "Printing job name: ${job_data}"
                   //Check if job had atleast one build done
                   if (job_data.getLastBuild()) {
                       last_job_num = job_data.getLastBuild().getNumber()
                       def upStreamBuild = Jenkins.getInstance().getItemByFullName(job_data.fullName).getBuildByNumber(last_job_num)
           
                       println 'LastBuildNumer: ' + last_job_num
                       println "LastBuildTime: ${upStreamBuild.getTime()}"
//                       println 'LastBuildCause: ' + findCause(upStreamBuild)
           
                       //Check if job had atleast one successful build
                       if (job_data.getLastSuccessfulBuild()) {
                           println 'LastSuccessNumber: ' + job_data.getLastSuccessfulBuild().getNumber()
                       } else {
                           println 'LastSuccessNumber: Null'
                       }
                    } else {
                        println 'LastBuildNumer: Null'
                    }
/**
                    if(!(job_data instanceof ExternalJob)) {
                        if(job_data instanceof MavenModuleSet) {
                            for(reporter in job_data.reporters) {
                                if(reporter instanceof MavenMailer) {
                                    if(reporter.recipients) {
                                        println 'recipients: ' + reporter.recipients
                                    } else {
                                        println 'recipients: Null'
                                    }
                                }
                            }
                        }
            
                        for(publisher in job_data.publishersList) {
                            if(publisher instanceof Mailer) {
                                if(publisher.recipients) {
                                    println  'recipients: ' + publisher.recipients
                                } else {
                                    println 'recipients: Null'
                                }
                            }
                            else if(publisher instanceof ExtendedEmailPublisher) {
                                if(publisher.recipientList) {
                                    println  'recipients: ' + publisher.recipientList
                                } else {
                                    println 'recipients: Null'
                                }
                            }
                        }
                    }
*/
                 }
                   


//                 def jenkins_url = http://jenkins-stage01.hcilabs.hpecorp.net/api/json
//                 r = jenkins_url.getAllItems
//                 println "results: ${r}"


//                 println "resulting jenkins jobs: ${jobs_names}"

//                  Jenkins.instance.getAllItems(AbstractItem.class).each {
//                      println(it.fullName)
//                  };
               }
            }
        }
    }
}
